version: 2

jobs:
  build:
    working_directory: ~/quotes_api
    docker:
      - image: ruby:2.4.1   # (1)
        environment:
          - PG_HOST: localhost
          - PG_USER: ubuntu
          - RAILS_ENV: test
          - RACK_ENV: test

      - image: postgres:9.5
        environment:
          - POSTGRES_USER: ubuntu
          - POSTGRES_DB: quotes-api_test

    steps:
      - checkout
      # Restore bundle cache
      - type: cache-restore
        key: rails-demo-{{ checksum "Gemfile.lock" }}

      # - run:
      #     name: Install System Dependencies
      #     command: apt-get update -qq && apt-get install -y build-essential postgresql libpq-dev nodejs rake
      - run:
          name: Install Ruby Dependencies
          command: bundle install --path vendor/bundle

      - type: cache-save
        key: rails-demo-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      - run:
          name: Set up DB
          command: |
            bundle exec rake db:create db:schema:load --trace
            bundle exec rake db:migrate
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/quotes-api_test"

      - run:
          name: Run Rspec
          command: bundle exec rspec

      - setup_remote_docker   # (2)
      
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      # build and push Docker image
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t   taejunyun/quotesapi:$TAG .      # (3)
          docker login -u $DOCKER_USER -p $DOCKER_PASS         # (4)
          docker push taejunyun/quotesapi:$TAG

      - run: |
          ./deploy.sh
